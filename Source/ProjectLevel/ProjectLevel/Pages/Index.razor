@page "/"

@using System.Timers;
@using ProjectLevel.Contracts.v1
@using ProjectLevel.Contracts.v1.Interfaces
@using ProjectLevel.Contracts.v1.Models
@using ProjectLevel.Services.v1.Implementations
@using ProjectLevel.Contracts.v1.Models
@inject ProjectLevel.Contracts.v1.Interfaces.IGame game
@*@inject ProjectLevel.Services.v1.Implementations.Game game*@

<PageTitle>Index</PageTitle>

<h1>Hello, from Project Level!</h1>

Your current Civilization info:
<br />
<hr />
@*<progress id="progMelee" value="@timerMelee" max="1000.0"></progress>
<progress id="progRanged" value="@timerRanged" max="1000.0"></progress>
<progress id="progSiege" value="@timerSiege" max="1000.0"></progress>*@

Gold: <label id="lblGold">@game.GetGold()</label>
<br />
Gold Income Rate: <label id="lblGoldLevel">@game.GetGoldIncomeRate()</label>
<br />
Gold Action: <progress id="progGold" value="@game.GetGoldActionBarValue()" max="@Constants.ActionBarMax"></progress>
<br />
<hr />

Melee Unit Count: <label id="lblMeleeUnitCount">@game.GetMilitaryUnitCount(Constants.MilitaryType.Melee)</label>
<br />
Melee Level: <label id="lblMeleeLevel">@game.GetMilitaryLevel(Constants.MilitaryType.Melee)</label>
<br />
Melee Damage: <label id="lblMeleeDamage">@game.GetMilitaryDamage(Constants.MilitaryType.Melee)</label>
<br />
Melee Action: <progress id="progMelee" value="@game.GetMilitaryActionBarValue(Constants.MilitaryType.Melee)" max="@Constants.ActionBarMax"></progress>
<br />
<hr />

Ranged Unit Count: <label id="lblRangedUnitCount">@game.GetMilitaryUnitCount(Constants.MilitaryType.Ranged)</label>
<br />
Ranged Level: <label id="lblRangedLevel">@game.GetMilitaryLevel(Constants.MilitaryType.Ranged)</label>
<br />
Ranged Damage: <label id="lblRangedDamage">@game.GetMilitaryDamage(Constants.MilitaryType.Ranged)</label>
<br />
Ranged Action: <progress id="progRanged" value="@game.GetMilitaryActionBarValue(Constants.MilitaryType.Ranged)" max="@Constants.ActionBarMax"></progress>
<br />
<hr />

Siege Unit Count: <label id="lblSiegeUnitCount">@game.GetMilitaryUnitCount(Constants.MilitaryType.Siege)</label>
<br />
Siege Level: <label id="lblSiegeLevel">@game.GetMilitaryLevel(Constants.MilitaryType.Siege)</label>
<br />
Siege Damage: <label id="lblSiegeDamage">@game.GetMilitaryDamage(Constants.MilitaryType.Siege)</label>
<br />
Siege Action: <progress id="progSiege" value="@game.GetMilitaryActionBarValue(Constants.MilitaryType.Siege)" max="@Constants.ActionBarMax"></progress>
<br />
<hr />




@code {
    Timer timer;
    //float timerMelee = 0.0f;
    //float timerRanged = 0.0f;
    //float timerSiege = 0.0f;



    protected override void OnInitialized()
    {
        timer = new Timer();
        timer.Interval = 100;
        timer.Elapsed += TimerOnElapsed;
        timer.Start();
    }

    private void TimerOnElapsed(object sender, ElapsedEventArgs e)
    {
        base.InvokeAsync(StateHasChanged);

        game.TriggerAllActionBars();
        //timerMelee = game.GetCivilization().Military.MeleeActionBar.Value;
        //timerRanged =game.GetCivilization().Military.RangedActionBar.Value;
        //timerSiege = game.GetCivilization().Military.SiegeActionBar.Value;

        //currentTimer++;

        //if(currentTimer >= Constants.ActionBarMax)
        //{
        //    currentTimer = 0.0f;
        //}
    }

    public void Dispose()
    {
        timer.Dispose();
    }
}